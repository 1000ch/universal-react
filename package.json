{
  "name": "universal-react-boilerplate",
  "config": {
    "browserify_transforms": "--transform [ babelify --presets [ es2015 react ] --plugins [ add-module-exports transform-class-properties ] ]",
    "postcss_plugins": "--use postcss-import --use postcss-custom-properties --use autoprefixer --use cssnano"
  },
  "scripts": {
    "build": "npm run build:js && npm run build:css && npm run build:img",
    "build:js": "mkdir -p dist/js && npm run build:js:client && npm run build:js:server",
    "build:js:client": "browserify src/js/client.js $npm_package_config_browserify_transforms -o dist/js/app.js",
    "build:js:server": "babel src/js --out-dir dist/js",
    "build:css": "mkdir -p dist/css && npm run build:css:lib & npm run build:css:app",
    "build:css:lib": "postcss $npm_package_config_postcss_plugins --output dist/css/lib.min.css src/css/lib.css",
    "build:css:app": "postcss $npm_package_config_postcss_plugins --output dist/css/app.min.css src/css/app.css",
    "build:img": "cp -r src/img dist",
    "watch": "npm run watch:js & npm run watch:css",
    "watch:js": "npm run watch:js:client & npm run watch:js:server",
    "watch:js:client": "watchify src/js/client.js --debug -v $npm_package_config_browserify_transforms -o dist/js/app.js",
    "watch:js:server": "babel src/js --watch --out-dir dist/js",
    "watch:css": "npm run watch:css:lib & npm run watch:css:app",
    "watch:css:lib": "postcss $npm_package_config_postcss_plugins --watch --output dist/css/lib.min.css src/css/lib.css",
    "watch:css:app": "postcss $npm_package_config_postcss_plugins --watch --output dist/css/app.min.css src/css/app.css",
    "test": "npm run lint",
    "lint": "npm run lint:js && npm run lint:css",
    "lint:js": "eslint src/js",
    "lint:css": "stylelint src/css/*.css",
    "start": "npm run build && nodemon dist/js/server.js"
  },
  "repository": "1000ch/universal-react-boilerplate",
  "author": "1000ch",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/1000ch/universal-react-boilerplate/issues"
  },
  "homepage": "https://github.com/1000ch/universal-react-boilerplate#readme",
  "dependencies": {
    "axios": "^0.12.0",
    "body-parser": "^1.15.2",
    "cookie-parser": "^1.4.3",
    "express": "^4.14.0",
    "fluxible": "^1.2.0",
    "fluxible-addons-react": "^0.2.8",
    "fluxible-plugin-fetchr": "^0.3.9",
    "fluxible-router": "^1.0.0-alpha.5",
    "normalize.css": "^4.1.1",
    "react": "^15.1.0",
    "react-dom": "^15.1.0",
    "serialize-javascript": "^1.3.0"
  },
  "devDependencies": {
    "autoprefixer": "^6.3.6",
    "babel-cli": "^6.10.1",
    "babel-eslint": "^6.1.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-syntax-async-functions": "^6.8.0",
    "babel-plugin-transform-class-properties": "^6.10.2",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-es2016": "^6.11.3",
    "babel-preset-react": "^6.11.1",
    "babelify": "^7.3.0",
    "browserify": "^13.0.1",
    "cssnano": "^3.7.1",
    "eslint": "^2.13.1",
    "eslint-config-airbnb": "^9.0.1",
    "eslint-plugin-import": "^1.9.2",
    "eslint-plugin-jsx-a11y": "^1.5.3",
    "eslint-plugin-react": "^5.2.2",
    "nodemon": "^1.9.2",
    "postcss-cli": "^2.5.2",
    "postcss-custom-properties": "^5.0.1",
    "postcss-import": "^8.1.2",
    "stylelint": "^6.7.1",
    "stylelint-config-standard": "^10.0.0",
    "watchify": "^3.7.0"
  },
  "babel": {
    "presets": [
      "es2015",
      "es2016",
      "react"
    ],
    "plugins": [
      "add-module-exports",
      "syntax-async-functions",
      "transform-class-properties"
    ]
  },
  "eslintConfig": {
    "parser": "babel-eslint",
    "extends": "eslint-config-airbnb",
    "rules": {
      "comma-dangle": [
        "error",
        "never"
      ],
      "global-require": [
        0
      ],
      "no-class-assign": [
        0
      ],
      "no-underscore-dangle": [
        0
      ],
      "no-useless-constructor": [
        0
      ],
      "key-spacing": [
        "error",
        {
          "beforeColon": true,
          "afterColon": true,
          "align": "colon"
        }
      ]
    }
  },
  "stylelint": {
    "extends": "stylelint-config-standard"
  }
}
